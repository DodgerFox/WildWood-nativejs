"use strict";window.onload=()=>{forum.init(),panel.init(),post.init()};const forum={data(){fetch("assets/data/articles.json").then(t=>{t.json().then(t=>{this.articles=t,this.catcheDOM(),this.filter(),this.bindEvents()})})},init(){this.data(),this.helpers()},catcheDOM(){this.input=document.querySelector('.search-input input[type="search"]'),this.list=document.querySelector(".timeline-body"),this.detail=document.querySelector(".article-wrap")},bindEvents(){this.inputHandler(),this.clickHandler()},inputHandler(){this.input.addEventListener("keyup",()=>{const t=this.input.value.toUpperCase();(0===t.length||t.length>1)&&this.filter()})},clickHandler(){this.posts.forEach(t=>{t.addEventListener("click",()=>{this.openArticle(t)})})},helpers(){$(".timeline").mCustomScrollbar({scrollInertia:350,autoHideScrollbar:!0,mouseWheel:{scrollAmount:200}}),$(".article").mCustomScrollbar({scrollInertia:350,autoHideScrollbar:!0,mouseWheel:{scrollAmount:200}})},openArticle(t){this.detail.innerHTML="",this.posts.forEach(t=>{t.classList.remove("active")}),t.classList.toggle("active"),this.articles.forEach(e=>{if(e.id==t.getAttribute("data-id")){const t='<div class="article-header" style="background-image: url(\''+e.cover+'\');">\n            <div class="author">\n              <div class="author__avatar" style="background-image: url(\''+e.avatar+'\');">\n                <div class="author-cat">\n                  <div class="author-cat__item snowboard"></div>\n                </div>\n              </div>\n              <p class="author-name">Mary Jackson</p>\n            </div>\n          </div>\n          <div class="content">\n            <div class="content-wrap">\n              <div class="content-info">\n                <p class="content-info__item">'+e.date+'</p>\n                <p class="content-info__item">'+e.views+' просмотров</p>\n                <p class="content-info__item">2 комментария</p>\n              </div>\n              <div class="content-body">\n              '+e.content+"\n              </div>\n            </div>\n          </div>";this.detail.insertAdjacentHTML("beforeEnd",t)}})},filter(){const t=this.input.value.toUpperCase();this.filtered=this.articles.filter(e=>{return("#"===t[0]?e.tags.toUpperCase():e.title.toUpperCase()).indexOf(t)>-1}),this.filtered.length>0?this.render():(this.list.innerHTML="",this.list.insertAdjacentHTML("beforeEnd","<p>Нетъ</p>"))},render(){this.list.innerHTML="",this.filtered.forEach(t=>{const e='<article class="post" data-id="'+t.id+'"> \n                <div class="post-container">\n                <p class="post-title">'+t.title+'</p>\n                <div class="category">\n                  <div class="category-item snowboard"></div>\n                  <div class="category-item ski"></div>\n                  <div class="category-item skateboard"></div>\n                </div>\',\n                <div class="info">\n                  <div class="info-wrap">\n                    <p class="info__tag">'+t.tags+'</p>\n                    <p class="info__date">'+t.date+'</p>\n                  </div>\n                  <div class="info-wrap">\n                    <a class="info__flame" href="#">\n                      <img src="assets/images/icon_flame.svg" class="mCS_img_loaded">\n                    </a>\n                    <a class="info__user" href="#" style="background-image: url(\''+t.avatar+"');\"></a>\n                  </div>\n                </div>\n                </div>\n              </article>";this.list.insertAdjacentHTML("beforeEnd",e)}),this.posts=document.querySelectorAll(".post"),this.clickHandler()}},panel={init(){this.catcheDOM(),this.bindEvents(),this.newPost.classList.toggle("hidden")},catcheDOM(){this.button=document.querySelector(".menu-user"),this.panel=document.querySelector(".panel"),this.buttonNew=document.querySelector(".menu-add"),this.buttonClose=document.querySelector(".new-close"),this.newPost=document.querySelector(".new")},bindEvents(){this.button.addEventListener("click",()=>{this.panel.classList.toggle("active")}),this.buttonNew.addEventListener("click",()=>{this.newPost.classList.toggle("hidden")}),this.buttonClose.addEventListener("click",()=>{this.newPost.classList.toggle("hidden")})}},post={init(){this.catcheDOM(),this.bindEvents(),this.textarea(),this.newTextarea()},catcheDOM(){this.body=document.querySelector(".new"),this.types=document.querySelectorAll(".new-add"),this.cats=document.querySelectorAll(".new-cats .new-cats__item"),this.catsWrap=document.querySelector(".new-cats"),this.catsBtn=document.querySelector(".new-cats__add"),this.categoriesBody=document.querySelector(".new-categories")},bindEvents(){this.types.forEach(t=>t.addEventListener("click",()=>this.openTypes(t))),this.cats.forEach(t=>t.addEventListener("click",()=>t.remove())),this.catsBtn.addEventListener("click",()=>this.categories())},categories(){const t=document.querySelector(".new-categories__button"),e=document.querySelectorAll(".new-categories__item");this.cats=document.querySelectorAll(".new-cats .new-cats__item");let s=[];this.catsBtn.classList.toggle("active"),this.categoriesBody.classList.toggle("active"),e.forEach(t=>{this.cats.forEach(e=>{t.classList.contains(e.getAttribute("data-cat"))&&(s.push(e.getAttribute("data-cat")),t.classList.add("choise"))}),t.addEventListener("click",()=>{if(t.classList.contains("choise")){const e=s.indexOf(t.getAttribute("data-cat"));s=function(t,...e){var s=new Set(e);return t.filter((t,e)=>!s.has(e))}(s,e),console.log("yes")}else s.push(t.getAttribute("data-cat")),console.log("no");t.classList.toggle("choise")})}),t.addEventListener("click",()=>{console.log(s),s.forEach(t=>{this.catsWrap.innerHTML="";const e='<div class="new-cats__item '+t+'" data-cat="'+t+'">'+t+"</div>";this.catsWrap.insertAdjacentHTML("afterBegin",e)}),this.catsBtn.classList.toggle("active"),this.categoriesBody.classList.toggle("active")})},textarea(){$(this.body).on("focus","textarea",(function(){const t=this.value;this.value="",this.baseScrollHeight=this.scrollHeight,this.value=t,this.coef=this.classList.contains("new-header")?43:24})).on("input","textarea",(function(){var t,e=0|this.getAttribute("data-min-rows");this.rows=e,t=Math.ceil((this.scrollHeight-this.baseScrollHeight)/this.coef),this.rows=e+t}))},openTypes(t){const e=t.parentNode;t.childNodes[1].childNodes.forEach(s=>s.addEventListener("click",s=>this.changeType(e,t,s))),t.classList.toggle("active")},changeType(t,e,s){t.classList.remove("paragraph")},newTextarea(){const t=document.querySelectorAll("textarea.autoExpand");console.log(t),t.forEach(t=>{const e=t.parentElement;t.addEventListener("keyup",s=>{if("Enter"===s.code)if(e.nextElementSibling.classList.contains("paragraph"))t.blur(),e.nextElementSibling.focus(),console.log("focus");else{const t='<div class="new-item paragraph">\n            <div class="new-add">\n              <ul>\n                <li class="paragraph">\n                  <img src="assets/images/content-p.svg">\n                </li>\n                <li class="image">\n                  <img src="assets/images/content-i.svg">\n                </li>\n              </ul>\n            </div>\n            <textarea class="autoExpand" rows="1"></textarea>\n          </div>';e.insertAdjacentHTML("afterEnd",t),e.nextElementSibling.childNodes[3].focus(),console.log("new")}})})}};